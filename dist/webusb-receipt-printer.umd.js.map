{"version":3,"file":"webusb-receipt-printer.umd.js","sources":["../src/event-emitter.js","../src/main.js"],"sourcesContent":["class EventEmitter {\r\n    constructor(device) {\r\n        this._events = {};\r\n    }\r\n\r\n    on(e, f) {\r\n        this._events[e] = this._events[e] || [];\r\n        this._events[e].push(f);\r\n    }\r\n\r\n    emit(e, ...args) {\r\n        let fs = this._events[e];\r\n        if (fs) {\r\n            fs.forEach(f => {\r\n                setTimeout(() => f(...args), 0);\r\n            });\r\n        }\r\n    }        \r\n}\r\n\r\nexport default EventEmitter;","import EventEmitter from \"./event-emitter.js\";\r\n\r\nconst DeviceProfiles = [\r\n  /* POS-8022 and similar printers */\r\n  {\r\n    filters: [{ vendorId: 0x0483, productId: 0x5743 }],\r\n\r\n    configuration: 1,\r\n    interface: 0,\r\n\r\n    language: \"esc-pos\",\r\n    codepageMapping: \"default\",\r\n  },\r\n\r\n  // Zonerich\r\n  {\r\n    filters: [{ vendorId: 0x0525, productId: 0xa702 }],\r\n\r\n    configuration: 1,\r\n    interface: 0,\r\n\r\n    language: \"esc-pos\",\r\n    codepageMapping: \"default\",\r\n  },\r\n\r\n  /* POS-5805, POS-8360 and similar printers */\r\n  {\r\n    filters: [{ vendorId: 0x0416, productId: 0x5011 }],\r\n\r\n    configuration: 1,\r\n    interface: 0,\r\n\r\n    language: \"esc-pos\",\r\n    codepageMapping: \"zjiang\",\r\n  },\r\n\r\n  /* MPT-II and similar printers */\r\n  {\r\n    filters: [{ vendorId: 0x0483, productId: 0x5840 }],\r\n\r\n    configuration: 1,\r\n    interface: 0,\r\n\r\n    language: \"esc-pos\",\r\n    codepageMapping: \"mpt\",\r\n  },\r\n\r\n  /* Samsung SRP */\r\n  {\r\n    filters: [{ vendorId: 0x0419 }, { vendorId: 0x1504 }],\r\n\r\n    configuration: 1,\r\n    interface: 0,\r\n\r\n    language: \"esc-pos\",\r\n    codepageMapping: \"bixolon\",\r\n  },\r\n\r\n  /* Star */\r\n  {\r\n    filters: [{ vendorId: 0x0519 }],\r\n\r\n    configuration: 1,\r\n    interface: 0,\r\n\r\n    /*\r\n\r\n\t\t\tvendorId\tproductId\tproductName\r\n\r\n\t\t\t\t\t\t\t\t\tFVP10\t\t\t\tstar-line\r\n\t\t\t0x0519\t\t0x0001\t\tTSP650II\t\t\tstar-line\r\n\t\t\t\t\t\t\t\t\tTSP700II\t\t\tstar-line\r\n\t\t\t\t\t\t\t\t\tTSP800II\t\t\tstar-line\r\n\t\t\t\t\t\t\t\t\tSP700\t\t\t\tstar-line\r\n\t\t\t0x0519 \t\t0x0003\t\tTSP100II\t\t\tstar-graphics\r\n\t\t\t\t\t\t\t\t\tTSP100III\t\t\tstar-graphics\r\n\t\t\t\t\t\t\t\t\tTSP100IV\t\t\tstar-prnt\r\n\t\t\t0x0519\t\t0x0017\t\tmPOP\t\t\t\tstar-prnt\r\n\t\t\t0x0519\t\t0x0019\t\tmC-Label3\t\t\tstar-prnt\r\n\t\t\t0x0519\t\t0x000b\t\tBSC10\t\t\t\tesc-pos\r\n\t\t\t0x0519\t\t0x0011\t\tBSC10BR\t\t\t\tesc-pos\r\n\t\t\t0x0519\t\t0x001b\t\tBSC10II\t\t\t\tesc-pos\r\n\t\t\t0x0519\t\t0x0043\t\tSM-S230i\t\t\t\r\n\t\t\t0x0519\t\t0x0047\t\tmC-Print3\t\t\tstar-prnt\r\n\t\t\t0x0519\t\t0x0049\t\tmC-Print2\t\t\tstar-prnt\r\n\r\n\t\t*/\r\n\r\n    language: (device) => {\r\n      let language = \"star-line\";\r\n      let name = device.productName;\r\n\r\n      /* \r\n        Even though the product names are a bit messy, the best way to distinguish between \r\n        models is by the product name. It is not possible to do it by the productId alone, \r\n        as the same productId is used for different models supporting different languages.\r\n\r\n        But we do need to normalize the names a bit, as they are not consistent.\r\n\r\n        For example:\t\r\n        TSP654 (STR_T-001) -> TSP650\r\n        Star TSP143IIIU -> TSP100III\t\t\t\t\t\t\t\t\t\r\n      */\r\n\r\n      name = name.replace(/^Star\\s+/i, \"\");\r\n      name = name.replace(\r\n        /^TSP(1|4|6|7|8|10)(13|43)(.*)?$/,\r\n        (m, p1, p2, p3) => \"TSP\" + p1 + \"00\" + (p3 || \"\")\r\n      );\r\n      name = name.replace(\r\n        /^TSP(55|65)(1|4)(.*)?$/,\r\n        (m, p1, p2, p3) => \"TSP\" + p1 + \"0\" + (p3 || \"\")\r\n      );\r\n      name = name.replace(\r\n        /^TSP([0-9]+)(II|III|IV|V|VI)?(.*)?$/,\r\n        (m, p1, p2) => \"TSP\" + p1 + (p2 || \"\")\r\n      );\r\n\r\n      switch (name) {\r\n        case \"TSP100IV\":\r\n        case \"mPOP\":\r\n        case \"mC-Label3\":\r\n        case \"mC-Print3\":\r\n        case \"mC-Print2\":\r\n          language = \"star-prnt\";\r\n          break;\r\n\r\n        case \"TSP100\":\r\n        case \"TSP100II\":\r\n        case \"TSP100III\":\r\n          language = \"star-graphics\";\r\n          break;\r\n\r\n        case \"BSC10\":\r\n        case \"BSC10BR\":\r\n        case \"BSC10II\":\r\n          language = \"esc-pos\";\r\n          break;\r\n      }\r\n\r\n      return language;\r\n    },\r\n\r\n    codepageMapping: \"star\",\r\n  },\r\n\r\n  /* Epson */\r\n  {\r\n    filters: [{ vendorId: 0x04b8 }],\r\n\r\n    configuration: 1,\r\n    interface: 0,\r\n\r\n    language: \"esc-pos\",\r\n    codepageMapping: \"epson\",\r\n  },\r\n\r\n  /* Citizen */\r\n  {\r\n    filters: [{ vendorId: 0x1d90 }],\r\n\r\n    configuration: 1,\r\n    interface: 0,\r\n\r\n    language: \"esc-pos\",\r\n    codepageMapping: \"citizen\",\r\n  },\r\n\r\n  /* HP */\r\n  {\r\n    filters: [{ vendorId: 0x05d9 }],\r\n\r\n    configuration: 1,\r\n    interface: 0,\r\n\r\n    language: \"esc-pos\",\r\n    codepageMapping: \"hp\",\r\n  },\r\n\r\n  /* Fujitsu */\r\n\r\n  {\r\n    filters: [{ vendorId: 0x04c5 }],\r\n\r\n    configuration: 1,\r\n    interface: 0,\r\n\r\n    language: \"esc-pos\",\r\n    codepageMapping: \"epson\",\r\n  },\r\n\r\n  /* Dtronic */\r\n  {\r\n    filters: [{ vendorId: 0x0fe6, productId: 0x811e }],\r\n\r\n    configuration: 1,\r\n    interface: 0,\r\n\r\n    language: \"esc-pos\",\r\n    codepageMapping: \"epson\",\r\n  },\r\n\r\n  /* Xprinter */\r\n  {\r\n    filters: [{ vendorId: 0x1fc9, productId: 0x2016 }],\r\n\r\n    configuration: 1,\r\n    interface: 0,\r\n\r\n    language: \"esc-pos\",\r\n    codepageMapping: \"xprinter\",\r\n  },\r\n];\r\n\r\nclass ReceiptPrinterDriver {}\r\n\r\nclass WebUSBReceiptPrinter extends ReceiptPrinterDriver {\r\n  #emitter;\r\n\r\n  #device = null;\r\n  #profile = null;\r\n  #endpoints = {\r\n    input: null,\r\n    output: null,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.#emitter = new EventEmitter();\r\n\r\n    navigator.usb.addEventListener(\"disconnect\", (event) => {\r\n      if (this.#device == event.device) {\r\n        this.#emitter.emit(\"disconnected\");\r\n      }\r\n    });\r\n  }\r\n\r\n  get device() {\r\n    return this.#device;\r\n  }\r\n\r\n  async connect() {\r\n    try {\r\n      let device = await navigator.usb.requestDevice({\r\n        filters: DeviceProfiles.map((i) => i.filters).reduce((a, b) =>\r\n          a.concat(b)\r\n        ),\r\n      });\r\n\r\n      if (device) {\r\n        console.info(\"Connected to:\", device);\r\n        await this.#open(device);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Could not connect! \" + error);\r\n    }\r\n  }\r\n\r\n  async reconnect(previousDevice) {\r\n    let devices = await navigator.usb.getDevices();\r\n\r\n    let device = devices.find(\r\n      (device) => device.serialNumber && device.serialNumber == previousDevice.serialNumber\r\n    );\r\n\r\n    if (!device) {\r\n      device = devices.find(\r\n        (device) =>\r\n          device.vendorId == previousDevice.vendorId &&\r\n          device.productId == previousDevice.productId &&\r\n          device.manufacturerName == previousDevice.manufacturerName &&\r\n          device.productName == previousDevice.productName\r\n      );\r\n    }\r\n\r\n    if (device) {\r\n      await this.#open(device);\r\n    }\r\n  }\r\n\r\n  async #open(device) {\r\n    this.#device = device;\r\n\r\n    this.#profile = DeviceProfiles.find((item) =>\r\n      item.filters.some((filter) =>\r\n        filter.vendorId && filter.productId\r\n          ? filter.vendorId == this.#device.vendorId &&\r\n            filter.productId == this.#device.productId\r\n          : filter.vendorId == this.#device.vendorId\r\n      )\r\n    );\r\n\r\n    await this.#device.open();\r\n    await this.#device.selectConfiguration(this.#profile.configuration);\r\n    await this.#device.claimInterface(this.#profile.interface);\r\n\r\n    let iface = this.#device.configuration.interfaces.find(\r\n      (i) => i.interfaceNumber == this.#profile.interface\r\n    );\r\n\r\n    this.#endpoints.output = iface.alternate.endpoints.find(\r\n      (e) => e.direction == \"out\"\r\n    );\r\n    this.#endpoints.input = iface.alternate.endpoints.find(\r\n      (e) => e.direction == \"in\"\r\n    );\r\n\r\n    await this.#device.reset?.();\r\n\r\n    this.#emitter.emit(\"connected\", {\r\n      type: \"usb\",\r\n      manufacturerName: this.#device.manufacturerName,\r\n      productName: this.#device.productName,\r\n      serialNumber: this.#device.serialNumber,\r\n      vendorId: this.#device.vendorId,\r\n      productId: this.#device.productId,\r\n      language: await this.#evaluate(this.#profile.language),\r\n      codepageMapping: await this.#evaluate(this.#profile.codepageMapping),\r\n    });\r\n  }\r\n\r\n  async #evaluate(expression) {\r\n    if (typeof expression == \"function\") {\r\n      return await expression(this.#device);\r\n    }\r\n\r\n    return expression;\r\n  }\r\n\r\n  async listen() {\r\n    if (this.#endpoints.input) {\r\n      this.#read();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  async #read() {\r\n    if (!this.#device) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await this.#device.transferIn(\r\n        this.#endpoints.input.endpointNumber,\r\n        64\r\n      );\r\n\r\n      if (result instanceof USBInTransferResult) {\r\n        if (result.data.byteLength) {\r\n          this.#emitter.emit(\"data\", result.data);\r\n        }\r\n      }\r\n\r\n      this.#read();\r\n    } catch (e) {}\r\n  }\r\n\r\n  async disconnect() {\r\n    if (!this.#device) {\r\n      return;\r\n    }\r\n\r\n    await this.#device.close?.();\r\n\r\n    this.#device = null;\r\n    this.#profile = null;\r\n\r\n    this.#emitter.emit(\"disconnected\");\r\n  }\r\n\r\n  async print(command) {\r\n    if (this.#device && this.#endpoints.output) {\r\n      try {\r\n        await this.#device.transferOut(\r\n          this.#endpoints.output.endpointNumber,\r\n          command\r\n        );\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  addEventListener(n, f) {\r\n    this.#emitter.on(n, f);\r\n  }\r\n}\r\n\r\nexport default WebUSBReceiptPrinter;\r\n"],"names":["EventEmitter","constructor","device","this","_events","on","e","f","push","emit","args","fs","forEach","setTimeout","DeviceProfiles","filters","vendorId","productId","configuration","interface","language","codepageMapping","name","productName","replace","m","p1","p2","p3","ReceiptPrinterDriver","emitter","profile","endpoints","input","output","super","navigator","usb","addEventListener","event","async","requestDevice","map","i","reduce","a","b","concat","console","info","open","error","log","previousDevice","devices","getDevices","find","serialNumber","manufacturerName","item","some","filter","selectConfiguration","claimInterface","iface","interfaces","interfaceNumber","alternate","direction","reset","type","evaluate","expression","read","result","transferIn","endpointNumber","USBInTransferResult","data","byteLength","close","command","transferOut","n"],"mappings":"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"}