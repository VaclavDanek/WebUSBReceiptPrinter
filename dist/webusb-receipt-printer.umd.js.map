{"version":3,"file":"webusb-receipt-printer.umd.js","sources":["../src/event-emitter.js","../src/main.js"],"sourcesContent":["class EventEmitter {\n    constructor(device) {\n        this._events = {};\n    }\n\n    on(e, f) {\n        this._events[e] = this._events[e] || [];\n        this._events[e].push(f);\n    }\n\n    emit(e, ...args) {\n        let fs = this._events[e];\n        if (fs) {\n            fs.forEach(f => {\n                setTimeout(() => f(...args), 0);\n            });\n        }\n    }        \n}\n\nexport default EventEmitter;","import EventEmitter from \"./event-emitter.js\";\n\nconst DeviceProfiles = [\n  /* POS-8022 and similar printers */\n  {\n    filters: [{ vendorId: 0x0483, productId: 0x5743 }],\n\n    configuration: 1,\n    interface: 0,\n\n    language: \"esc-pos\",\n    codepageMapping: \"default\",\n  },\n\n  // Zonerich\n\n  {\n    filters: [{ vendorId: 0x0525, productId: 0xa702 }],\n\n    configuration: 1,\n    interface: 0,\n\n    language: \"esc-pos\",\n    codepageMapping: \"default\",\n  },\n\n  /* POS-5805, POS-8360 and similar printers */\n  {\n    filters: [{ vendorId: 0x0416, productId: 0x5011 }],\n\n    configuration: 1,\n    interface: 0,\n\n    language: \"esc-pos\",\n    codepageMapping: \"zjiang\",\n  },\n\n  /* MPT-II and similar printers */\n  {\n    filters: [{ vendorId: 0x0483, productId: 0x5840 }],\n\n    configuration: 1,\n    interface: 0,\n\n    language: \"esc-pos\",\n    codepageMapping: \"mpt\",\n  },\n\n  /* Samsung SRP */\n  {\n    filters: [{ vendorId: 0x0419 }, { vendorId: 0x1504 }],\n\n    configuration: 1,\n    interface: 0,\n\n    language: \"esc-pos\",\n    codepageMapping: \"bixolon\",\n  },\n\n  /* Star */\n  {\n    filters: [{ vendorId: 0x0519 }],\n\n    configuration: 1,\n    interface: 0,\n\n    /*\n\n\t\t\tvendorId\tproductId\tproductName\n\n\t\t\t\t\t\t\t\t\tFVP10\t\t\t\tstar-line\n\t\t\t0x0519\t\t0x0001\t\tTSP650II\t\t\tstar-line\n\t\t\t\t\t\t\t\t\tTSP700II\t\t\tstar-line\n\t\t\t\t\t\t\t\t\tTSP800II\t\t\tstar-line\n\t\t\t\t\t\t\t\t\tSP700\t\t\t\tstar-line\n\t\t\t0x0519 \t\t0x0003\t\tTSP100II\t\t\tstar-graphics\n\t\t\t\t\t\t\t\t\tTSP100III\t\t\tstar-graphics\n\t\t\t\t\t\t\t\t\tTSP100IV\t\t\tstar-prnt\n\t\t\t0x0519\t\t0x0017\t\tmPOP\t\t\t\tstar-prnt\n\t\t\t0x0519\t\t0x0019\t\tmC-Label3\t\t\tstar-prnt\n\t\t\t0x0519\t\t0x000b\t\tBSC10\t\t\t\tesc-pos\n\t\t\t0x0519\t\t0x0011\t\tBSC10BR\t\t\t\tesc-pos\n\t\t\t0x0519\t\t0x001b\t\tBSC10II\t\t\t\tesc-pos\n\t\t\t0x0519\t\t0x0043\t\tSM-S230i\t\t\t\n\t\t\t0x0519\t\t0x0047\t\tmC-Print3\t\t\tstar-prnt\n\t\t\t0x0519\t\t0x0049\t\tmC-Print2\t\t\tstar-prnt\n\n\t\t*/\n\n    language: (device) => {\n      let language = \"star-line\";\n      let name = device.productName;\n\n      /* \n\t\t\t\t\t\t\t\t\tEven though the product names are a bit messy, the best way to distinguish between \n\t\t\t\t\t\t\t\t\tmodels is by the product name. It is not possible to do it by the productId alone, \n\t\t\t\t\t\t\t\t\tas the same productId is used for different models supporting different languages.\n\n\t\t\t\t\t\t\t\t\tBut we do need to normalize the names a bit, as they are not consistent.\n\n\t\t\t\t\t\t\t\t\tFor example:\t\n\t\t\t\t\t\t\t\t\tTSP654 (STR_T-001) -> TSP650\n\t\t\t\t\t\t\t\t\tStar TSP143IIIU -> TSP100III\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t*/\n\n      name = name.replace(/^Star\\s+/i, \"\");\n      name = name.replace(\n        /^TSP(1|4|6|7|8|10)(13|43)(.*)?$/,\n        (m, p1, p2, p3) => \"TSP\" + p1 + \"00\" + (p3 || \"\")\n      );\n      name = name.replace(\n        /^TSP(55|65)(1|4)(.*)?$/,\n        (m, p1, p2, p3) => \"TSP\" + p1 + \"0\" + (p3 || \"\")\n      );\n      name = name.replace(\n        /^TSP([0-9]+)(II|III|IV|V|VI)?(.*)?$/,\n        (m, p1, p2) => \"TSP\" + p1 + (p2 || \"\")\n      );\n\n      switch (name) {\n        case \"TSP100IV\":\n        case \"mPOP\":\n        case \"mC-Label3\":\n        case \"mC-Print3\":\n        case \"mC-Print2\":\n          language = \"star-prnt\";\n          break;\n\n        case \"TSP100\":\n        case \"TSP100II\":\n        case \"TSP100III\":\n          language = \"star-graphics\";\n          break;\n\n        case \"BSC10\":\n        case \"BSC10BR\":\n        case \"BSC10II\":\n          language = \"esc-pos\";\n          break;\n      }\n\n      return language;\n    },\n\n    codepageMapping: \"star\",\n  },\n\n  /* Epson */\n  {\n    filters: [{ vendorId: 0x04b8 }],\n\n    configuration: 1,\n    interface: 0,\n\n    language: \"esc-pos\",\n    codepageMapping: \"epson\",\n  },\n\n  /* Citizen */\n  {\n    filters: [{ vendorId: 0x1d90 }],\n\n    configuration: 1,\n    interface: 0,\n\n    language: \"esc-pos\",\n    codepageMapping: \"citizen\",\n  },\n\n  /* HP */\n  {\n    filters: [{ vendorId: 0x05d9 }],\n\n    configuration: 1,\n    interface: 0,\n\n    language: \"esc-pos\",\n    codepageMapping: \"hp\",\n  },\n\n  /* Fujitsu */\n\n  {\n    filters: [{ vendorId: 0x04c5 }],\n\n    configuration: 1,\n    interface: 0,\n\n    language: \"esc-pos\",\n    codepageMapping: \"epson\",\n  },\n\n  /* Dtronic */\n  {\n    filters: [{ vendorId: 0x0fe6, productId: 0x811e }],\n\n    configuration: 1,\n    interface: 0,\n\n    language: \"esc-pos\",\n    codepageMapping: \"epson\",\n  },\n\n  /* Xprinter */\n  {\n    filters: [{ vendorId: 0x1fc9, productId: 0x2016 }],\n\n    configuration: 1,\n    interface: 0,\n\n    language: \"esc-pos\",\n    codepageMapping: \"xprinter\",\n  },\n];\n\nclass ReceiptPrinterDriver {}\n\nclass WebUSBReceiptPrinter extends ReceiptPrinterDriver {\n  #emitter;\n\n  #device = null;\n  #profile = null;\n  #endpoints = {\n    input: null,\n    output: null,\n  };\n\n  constructor() {\n    super();\n\n    this.#emitter = new EventEmitter();\n\n    navigator.usb.addEventListener(\"disconnect\", (event) => {\n      if (this.#device == event.device) {\n        this.#emitter.emit(\"disconnected\");\n      }\n    });\n  }\n\n  async connect() {\n    try {\n      let device = await navigator.usb.requestDevice({\n        filters: DeviceProfiles.map((i) => i.filters).reduce((a, b) =>\n          a.concat(b)\n        ),\n      });\n\n      if (device) {\n        await this.#open(device);\n      }\n    } catch (error) {\n      console.log(\"Could not connect! \" + error);\n    }\n  }\n\n  async reconnect(previousDevice) {\n    let devices = await navigator.usb.getDevices();\n\n    let device = devices.find(\n      (device) => device.serialNumber == previousDevice.serialNumber\n    );\n\n    if (!device) {\n      device = devices.find(\n        (device) =>\n          device.vendorId == previousDevice.vendorId &&\n          device.productId == previousDevice.productId\n      );\n    }\n\n    if (device) {\n      await this.#open(device);\n    }\n  }\n\n  async #open(device) {\n    this.#device = device;\n\n    this.#profile = DeviceProfiles.find((item) =>\n      item.filters.some((filter) =>\n        filter.vendorId && filter.productId\n          ? filter.vendorId == this.#device.vendorId &&\n            filter.productId == this.#device.productId\n          : filter.vendorId == this.#device.vendorId\n      )\n    );\n\n    await this.#device.open();\n    await this.#device.selectConfiguration(this.#profile.configuration);\n    await this.#device.claimInterface(this.#profile.interface);\n\n    let iface = this.#device.configuration.interfaces.find(\n      (i) => i.interfaceNumber == this.#profile.interface\n    );\n\n    this.#endpoints.output = iface.alternate.endpoints.find(\n      (e) => e.direction == \"out\"\n    );\n    this.#endpoints.input = iface.alternate.endpoints.find(\n      (e) => e.direction == \"in\"\n    );\n\n    await this.#device.reset();\n\n    this.#emitter.emit(\"connected\", {\n      type: \"usb\",\n      manufacturerName: this.#device.manufacturerName,\n      productName: this.#device.productName,\n      serialNumber: this.#device.serialNumber,\n      vendorId: this.#device.vendorId,\n      productId: this.#device.productId,\n      language: await this.#evaluate(this.#profile.language),\n      codepageMapping: await this.#evaluate(this.#profile.codepageMapping),\n    });\n  }\n\n  async #evaluate(expression) {\n    if (typeof expression == \"function\") {\n      return await expression(this.#device);\n    }\n\n    return expression;\n  }\n\n  async listen() {\n    if (this.#endpoints.input) {\n      this.#read();\n      return true;\n    }\n  }\n\n  async #read() {\n    if (!this.#device) {\n      return;\n    }\n\n    try {\n      const result = await this.#device.transferIn(\n        this.#endpoints.input.endpointNumber,\n        64\n      );\n\n      if (result instanceof USBInTransferResult) {\n        if (result.data.byteLength) {\n          this.#emitter.emit(\"data\", result.data);\n        }\n      }\n\n      this.#read();\n    } catch (e) {}\n  }\n\n  async disconnect() {\n    if (!this.#device) {\n      return;\n    }\n\n    await this.#device.close();\n\n    this.#device = null;\n    this.#profile = null;\n\n    this.#emitter.emit(\"disconnected\");\n  }\n\n  async print(command) {\n    if (this.#device && this.#endpoints.output) {\n      try {\n        await this.#device.transferOut(\n          this.#endpoints.output.endpointNumber,\n          command\n        );\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  addEventListener(n, f) {\n    this.#emitter.on(n, f);\n  }\n}\n\nexport default WebUSBReceiptPrinter;\n"],"names":["EventEmitter","constructor","device","this","_events","on","e","f","push","emit","args","fs","forEach","setTimeout","DeviceProfiles","filters","vendorId","productId","configuration","interface","language","codepageMapping","name","productName","replace","m","p1","p2","p3","ReceiptPrinterDriver","emitter","profile","endpoints","input","output","super","navigator","usb","addEventListener","event","async","requestDevice","map","i","reduce","a","b","concat","open","error","console","log","previousDevice","devices","getDevices","find","serialNumber","item","some","filter","selectConfiguration","claimInterface","iface","interfaces","interfaceNumber","alternate","direction","reset","type","manufacturerName","evaluate","expression","read","result","transferIn","endpointNumber","USBInTransferResult","data","byteLength","close","command","transferOut","n"],"mappings":"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"}